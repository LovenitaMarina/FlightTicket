package training;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

//import org.testng.annotations.Test;

public class JStreams {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		ArrayList<String> names = new ArrayList<String>();
		names.add("Allan");
		names.add("Thimothy");
		names.add("Abigail");
		names.add("theodore");
		names.add("Aaron");
		int count = 0;

		for (String name : names) {
			//System.out.println(name);
			if (name.startsWith("A")) {
				count++;
			}

			if (name.contains("a")) {
				System.out.println(name);
			}

		}
		//shopping list = 3 most important thing in it
		String[] imp = {"Roti","Kapda","Makan","gadi"};
		
				
		List <String> shoppingList = new ArrayList<String>();
		shoppingList.add("Rice");
		shoppingList.add("flour");
		shoppingList.add("roti");
		shoppingList.add("Veges");
		shoppingList.add("KAPda");
		shoppingList.add("fruits");
		shoppingList.add("eggs");
		shoppingList.add("makaN");
		
		//selecting imp items present in shopping list
		
		
		

		System.out.println(count);

		JStreams jS = new JStreams();
		//jS.stremFilter();
		jS.letsTryLamda (shoppingList,imp);
	}

	
	public void letsTryLamda( List <String>  shoppingList, String[] imp) {
		List<String> impt = Arrays.asList(imp);
		shoppingList.stream().filter(sl -> sl.equalsIgnoreCase(impt.stream().toString())).forEach(sl-> System.out.print(sl));
		
	}
	public void stremFilter() {
		ArrayList<String> names = new ArrayList<String>();
		names.add("Allan");
		names.add("Thimothy");
		names.add("Abigail");
		names.add("theodore");
		names.add("Aaron");
		long count = names.stream().filter(nm -> nm.startsWith("A")).count();
		System.out.println("In function " + count);
		long d = Stream.of("Abc", "AFG", "BVG", "AQW").filter(nm -> {
			nm.startsWith("A");
			return false;
		}).count();
		System.out.println("Testing function with explicit 'false' return " +d);

		names.stream().filter(nm -> nm.contains("Th")).forEach(nm -> System.out.println(nm));
		
		System.out.println("finish");
	}
}
